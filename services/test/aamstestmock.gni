# Copyright (C) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

ability_base_path = "//foundation/ability/ability_base"
ability_runtime_path = "//foundation/ability/ability_runtime"
ability_runtime_inner_api_path = "${ability_runtime_path}/interfaces/inner_api"
ability_runtime_kits_path = "${ability_runtime_path}/frameworks/kits"
ability_runtime_services_path = "${ability_runtime_path}/services"
AAMS_MOCK_PATH = "//foundation/barrierfree/accessibility/services/test/mock"
AAMS_FRAMEWORKS_PATH = "//foundation/barrierfree/accessibility/frameworks"
AAMS_INTERFACES_PATH = "//foundation/barrierfree/accessibility/interfaces"
AAMS_SERVICES_PATH = "//foundation/barrierfree/accessibility/services"
AAMS_COMMON_PATH = "//foundation/barrierfree/accessibility/common"
AAMS_FOUNDATION_PATH = "//foundation"

aams_mock_include_dirs = [
  "$AAMS_MOCK_PATH/distributeddatamgr/include",
  "$AAMS_MOCK_PATH/multimodalinput/include",
  "$AAMS_MOCK_PATH/powermanager/include",
  "//base/account/os_account/interfaces/innerkits/common/include",
  "//base/account/os_account/interfaces/innerkits/osaccount/native/include",
  "//base/global/resource_management/interfaces/inner_api/include",
  "//base/hiviewdfx/hiview/adapter/utility/include/extra/singleton.h",
  "//base/notification/common_event_service/interfaces/inner_api",
  "//base/notification/eventhandler/interfaces/inner_api",
  "//base/powermgr/display_manager/utils/native/include",
  "//foundation",
  "//foundation/arkui/napi/native_engine",
  "//foundation/distributeddatamgr/preferences/interfaces/inner_api/include",
  "//foundation/multimodalinput/input/interfaces/native/innerkits/proxy/include",
  "//foundation/distributeddatamgr/data_share/interfaces/inner_api/common/include",
  "//foundation/multimodalinput/input/interfaces/native/innerkits/event/include",
  "//base/powermgr/power_manager/interfaces/inner_api/native/include",
  "//foundation/bundlemanager/bundle_framework/interfaces/inner_api/appexecfwk_base/include",
  "//foundation/bundlemanager/bundle_framework/interfaces/inner_api/appexecfwk_core/include",
  "//foundation/bundlemanager/bundle_framework/interfaces/inner_api/appexecfwk_core/include/bundlemgr",
  "//foundation/systemabilitymgr/safwk/interfaces/innerkits/safwk",
  "//foundation/systemabilitymgr/samgr/interfaces/innerkits/samgr_proxy/include",
  "//foundation/systemabilitymgr/samgr/interfaces/innerkits/samgr_proxy/include",
  "//foundation/graphic/graphic_2d/rosen/modules/render_service_base/include",
  "//foundation/multimedia/image_framework/interfaces/kits/native/include",
  "//foundation/multimedia/image_framework/interfaces/innerkits/include",
  "//foundation/multimodalinput/input/util/common/include",
  "//foundation/window/window_manager/dm/include",
  "//foundation/window/window_manager/interfaces/innerkits",
  "//foundation/window/window_manager/interfaces/innerkits/dm",
  "//foundation/window/window_manager/interfaces/innerkits/wm",
  "//foundation/window/window_manager/utils/include",
  "//third_party/jsoncpp/include",
  "//third_party/jsoncpp/include/json",
  "//commonlibrary/c_utils/base/include",
  "//utils/system/safwk/native/include",
]

aams_mock_distributeddatamgr_src =
    [ "$AAMS_MOCK_PATH/distributeddatamgr/src/mock_preferences_helper.cpp" ]

aams_mock_multimodalinput_src = [
  "$AAMS_MOCK_PATH/multimodalinput/src/mock_input_event.cpp",
  "$AAMS_MOCK_PATH/multimodalinput/src/mock_input_manager.cpp",
  "$AAMS_MOCK_PATH/multimodalinput/src/mock_key_event.cpp",
  "$AAMS_MOCK_PATH/multimodalinput/src/mock_pointer_event.cpp",
]

aams_mock_powermanager_src =
    [ "$AAMS_MOCK_PATH/powermanager/src/mock_power_mgr_client.cpp" ]
